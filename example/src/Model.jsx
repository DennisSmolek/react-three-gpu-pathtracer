/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useLayoutEffect } from "react";
import { MeshPhysicalMaterial } from "three";

export default function Model(props) {
  const { scene } = useGLTF(import.meta.env.BASE_URL + "game_boy_classic.glb");

  useLayoutEffect(() => {
    convertOpacityToTransmission(scene);
  }, []);

  return <primitive {...props} object={scene} />;
}

function convertOpacityToTransmission(model) {
  model.traverse((c) => {
    if (c.material) {
      const material = c.material;
      if (material.opacity < 0.65 && material.opacity > 0.2) {
        const newMaterial = new MeshPhysicalMaterial();
        for (const key in material) {
          if (key in material) {
            if (material[key] === null) {
              continue;
            }

            if (material[key].isTexture) {
              newMaterial[key] = material[key];
            } else if (
              material[key].copy &&
              material[key].constructor === newMaterial[key].constructor
            ) {
              newMaterial[key].copy(material[key]);
            } else if (typeof material[key] === "number") {
              newMaterial[key] = material[key];
            }
          }
        }

        newMaterial.opacity = 1.0;
        newMaterial.transmission = 1.0;
        c.material = newMaterial;
      }
    }
  });
}
